
# cargo-vet imports lock

[[publisher.regalloc2]]
version = "0.9.3"
when = "2023-10-05"
user-id = 3726
user-login = "cfallin"
user-name = "Chris Fallin"

[[publisher.wasmparser]]
version = "0.206.0"
when = "2024-04-25"
user-id = 73222
user-login = "wasmtime-publish"

[[audits.wasmtime.wildcard-audits.regalloc2]]
who = "Chris Fallin <chris@cfallin.org>"
criteria = "safe-to-deploy"
user-id = 3726 # Chris Fallin (cfallin)
start = "2021-12-03"
end = "2024-05-02"
notes = "We (Bytecode Alliance) are the primary authors of regalloc2 and co-develop it with Cranelift/Wasmtime, with the same code-review, testing/fuzzing, and security standards."

[[audits.wasmtime.wildcard-audits.wasmparser]]
who = "Alex Crichton <alex@alexcrichton.com>"
criteria = "safe-to-deploy"
user-id = 73222 # wasmtime-publish
start = "2023-01-01"
end = "2025-05-08"
notes = """
The Bytecode Alliance uses the `wasmtime-publish` crates.io account to automate
publication of this crate from CI. This repository requires all PRs are reviewed
by a Bytecode Alliance maintainer and it owned by the Bytecode Alliance itself.
"""

[[audits.wasmtime.audits.adler]]
who = "Alex Crichton <alex@alexcrichton.com>"
criteria = "safe-to-deploy"
version = "1.0.2"
notes = "This is a small crate which forbids unsafe code and is a straightforward implementation of the adler hashing algorithm."

[[audits.wasmtime.audits.castaway]]
who = "Andrew Brown <andrew.brown@intel.com>"
criteria = "safe-to-deploy"
version = "0.2.2"
notes = "Very unsafe `transmute_unchecked` is used internally for downcasting; the crate is carefully written to maintain the necessary invariants."

[[audits.wasmtime.audits.cfg-if]]
who = "Alex Crichton <alex@alexcrichton.com>"
criteria = "safe-to-deploy"
version = "1.0.0"
notes = "I am the author of this crate."

[[audits.wasmtime.audits.cobs]]
who = "Alex Crichton <alex@alexcrichton.com>"
criteria = "safe-to-deploy"
version = "0.2.3"
notes = "No `unsafe` code in the crate and no usage of `std`"

[[audits.wasmtime.audits.compact_str]]
who = "David Justice <david@justice.dev"
criteria = "safe-to-deploy"
version = "0.7.1"
notes = "This library has many uses of unsafe, but contains extensive fuzzing and miri testing."

[[audits.wasmtime.audits.embedded-io]]
who = "Alex Crichton <alex@alexcrichton.com>"
criteria = "safe-to-deploy"
version = "0.4.0"
notes = "No `unsafe` code and only uses `std` in ways one would expect the crate to do so."

[[audits.wasmtime.audits.postcard]]
who = "Alex Crichton <alex@alexcrichton.com>"
criteria = "safe-to-deploy"
version = "1.0.8"
notes = """
I've audited the unsafe code to do what it looks like it's doing. Otherwise the
crate is a standard serializer/deserializer crate.
"""

[[audits.wasmtime.audits.static_assertions]]
who = "Andrew Brown <andrew.brown@intel.com>"
criteria = "safe-to-deploy"
version = "1.1.0"
notes = "No dependencies and completely a compile-time crate as advertised. Uses `unsafe` in one module as a compile-time check only: `mem::transmute` and `ptr::write` are wrapped in an impossible-to-run closure."
