[package]
authors = ["The Cranelift Project Developers"]
name = "cranelift-codegen"
version = "0.108.0"
description = "Low-level code generator library"
license = "Apache-2.0 WITH LLVM-exception"
documentation = "https://docs.rs/cranelift-codegen"
repository = "https://github.com/bytecodealliance/wasmtime"
categories = ["no-std"]
readme = "README.md"
keywords = ["compile", "compiler", "jit"]
build = "build.rs"
edition.workspace = true

[dependencies]
bumpalo = "3"
cranelift-codegen-shared = { path = "./shared", version = "0.108.0" }
cranelift-entity = { workspace = true }
cranelift-bforest = { workspace = true }
hashbrown = { workspace = true, features = ["raw"] }
target-lexicon = { workspace = true }
log = { workspace = true }
gimli = { workspace = true, optional = true, features = ["write"] }
smallvec = { workspace = true }
regalloc2 = { workspace = true, features = ["checker", "trace-log"] }
sync.workspace = true
fxhash.workspace = true
# It is a goal of the cranelift-cranelift-codegen crate to have minimal external dependencies.
# Please don't add any unless they are essential to the task of creating binary
# machine code. Integration tests that need external dependencies can be
# accomodated in `tests`.

[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }
similar = "2.5.0"

[build-dependencies]
cranelift-codegen-meta = { path = "meta" }
cranelift-isle = { workspace = true }

[features]
unwind = ["gimli"]

# ISA targets for which we should build.
# If no ISA targets are explicitly enabled, the ISA target for the host machine is enabled.
x86 = []
arm64 = []
s390x = []
riscv64 = []

# Option to enable all architectures.
all-arch = [
    "x86",
    "arm64",
    "s390x",
    "riscv64"
]

# Report any ISLE errors in pretty-printed style.
isle-errors = ["cranelift-isle/fancy-errors"]

# Put ISLE generated files in isle_generated_code/, for easier
# inspection, rather than inside of target/.
isle-in-source-tree = []

[[bench]]
name = "x64-evex-encoding"
harness = false
